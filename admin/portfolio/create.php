<?php
require_once '../includes/header.php';
require_once '../includes/db.php';

$categories = [
    'lightshow' => '–°–≤–µ—Ç–æ–≤—ã–µ —à–æ—É',
    'anniversary' => '–Æ–±–∏–ª–µ–∏', 
    'wedding' => '–°–≤–∞–¥—å–±—ã',
    'concert' => '–ö–æ–Ω—Ü–µ—Ä—Ç—ã',
    'kids' => '–î–µ—Ç—è–º',
    'media' => '–ú–µ–¥–∏–∞',
    'corporate' => '–ö–æ–º–ø–∞–Ω–∏—è–º'
];

// –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ GET –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
$selectedCategory = $_GET['category'] ?? '';
?>

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ</h1>
        <a href="index.php" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
        </a>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <form id="addPortfolioForm" enctype="multipart/form-data">
                        <!-- –ö–∞—Ç–µ–≥–æ—Ä–∏—è -->
                        <div class="mb-3">
                            <label for="category" class="form-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è *</label>
                            <select class="form-select" id="category" name="category" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                                <?php foreach ($categories as $key => $name): ?>
                                    <option value="<?= $key ?>" 
                                        <?= $selectedCategory === $key ? 'selected' : '' ?>>
                                        <?= $name ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                        </div>

                        <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ -->
                        <div class="mb-3">
                            <label for="image" class="form-label">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ *</label>
                            <input type="file" class="form-control" id="image" name="image" 
                                   accept="image/jpeg,image/png,image/webp" required>
                            <div class="form-text">
                                <strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é:</strong><br>
                                ‚Ä¢ –§–æ—Ä–º–∞—Ç—ã: JPG, PNG, WebP<br>
                                ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä: 800√ó600px (—Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ 4:3)<br>
                                ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 2MB<br>
                                ‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ
                            </div>
                        </div>

                        <!-- –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä -->
                        <div class="mb-3" id="previewContainer" style="display: none;">
                            <label class="form-label">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:</label>
                            <div class="border rounded p-3 text-center">
                                <img id="imagePreview" src="#" alt="–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä" 
                                     class="img-fluid rounded" style="max-height: 300px;">
                                <div class="mt-2">
                                    <small id="imageInfo" class="text-muted"></small>
                                </div>
                            </div>
                        </div>

                        <!-- –ö–Ω–æ–ø–∫–∏ -->
                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-plus-circle"></i> –î–æ–±–∞–≤–∏—Ç—å –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
                            </button>
                            <a href="index.php" class="btn btn-outline-secondary">–û—Ç–º–µ–Ω–∞</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π -->
        <div class="card mt-4">
    <div class="card-header bg-warning bg-opacity-10">
        <h6 class="mb-0">üéØ –û—Å–æ–±—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ —Å–µ—Ç–∫–µ</h6>
    </div>
    <div class="card-body">
        <p class="small mb-2"><strong>–ü–æ–∑–∏—Ü–∏–∏ 4 –∏ 7</strong> –∏–º–µ—é—Ç —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä:</p>
        <ul class="small mb-0">
            <li><strong>–†–∞–∑–º–µ—Ä:</strong> 865√ó397px</li>
            <li><strong>–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ:</strong> ~2.17:1</li>
            <li><strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:</strong> –∑–∞–Ω–∏–º–∞—é—Ç 2 —è—á–µ–π–∫–∏ –ø–æ —à–∏—Ä–∏–Ω–µ</li>
            <li><strong>–í–∞–∂–Ω–æ:</strong> —ç—Ç–∏ –ø–æ–∑–∏—Ü–∏–∏ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ</li>
        </ul>
    </div>
</div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('addPortfolioForm');
    const imageInput = document.getElementById('image');
    const previewContainer = document.getElementById('previewContainer');
    const imagePreview = document.getElementById('imagePreview');
    const imageInfo = document.getElementById('imageInfo');

    // –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    imageInput.addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
            const validTypes = ['image/jpeg', 'image/png', 'image/webp'];
            if (!validTypes.includes(file.type)) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPG, PNG –∏–ª–∏ WebP');
                imageInput.value = '';
                return;
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (2MB)
            if (file.size > 2 * 1024 * 1024) {
                alert('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 2MB');
                imageInput.value = '';
                return;
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
            const reader = new FileReader();
            reader.onload = function(e) {
                imagePreview.src = e.target.result;
                previewContainer.style.display = 'block';
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
                const sizeMB = (file.size / (1024 * 1024)).toFixed(2);
                imageInfo.textContent = `${file.name} (${sizeMB} MB)`;
            };
            reader.readAsDataURL(file);
        } else {
            previewContainer.style.display = 'none';
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
        const category = form.category.value;
        const image = form.image.files[0];
        
        if (!category) {
            showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', 'error');
            return;
        }
        
        if (!image) {
            showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', 'error');
            return;
        }

        const formData = new FormData(form);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const submitBtn = form.querySelector('button[type="submit"]');
        const originalText = submitBtn.innerHTML;
        submitBtn.innerHTML = '<i class="bi bi-arrow-repeat spinner"></i> –ó–∞–≥—Ä—É–∑–∫–∞...';
        submitBtn.disabled = true;

        fetch('create-handler.php', {
            method: 'POST',
            body: formData
        })
        .then(response => {
            // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.text(); // –°–Ω–∞—á–∞–ª–∞ —á–∏—Ç–∞–µ–º –∫–∞–∫ —Ç–µ–∫—Å—Ç
        })
        .then(text => {
            console.log('Raw response:', text);
            
            // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
            try {
                const data = JSON.parse(text);
                if (data.success) {
                    showAlert('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ!', 'success');
                    setTimeout(() => {
                        window.location.href = 'index.php';
                    }, 1500);
                } else {
                    showAlert(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', 'error');
                }
            } catch (e) {
                console.error('JSON parse error:', e);
                console.error('Response text:', text);
                showAlert('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞', 'error');
            }
        })
        .catch(error => {
            console.error('Fetch error:', error);
            showAlert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + error.message, 'error');
        })
        .finally(() => {
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        });
    });
});

function showAlert(message, type) {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∞–ª–µ—Ä—Ç—ã
    const oldAlerts = document.querySelectorAll('.alert');
    oldAlerts.forEach(alert => alert.remove());
    
    const alert = document.createElement('div');
    alert.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show mt-3`;
    alert.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    document.querySelector('.card-body').prepend(alert);
    
    setTimeout(() => {
        if (alert.parentNode) {
            alert.remove();
        }
    }, 5000);
}
</script>

<style>
.spinner {
    animation: spin 1s linear infinite;
}
@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}
</style>

<?php require_once '../includes/footer.php'; ?>